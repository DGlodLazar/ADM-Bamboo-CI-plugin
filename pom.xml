<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<name>HPE ALM Octane CI Plugin</name>
	<description>This plugin enables ALM Octane to retrieve and display Bamboo build pipelines and synchronize test results with Bamboo.
	</description>
	<organization>
		<name>HPE</name>
	</organization>
	<packaging>atlassian-plugin</packaging>
	<artifactId>hp-lifecycle-management-bamboo-ci-plugin</artifactId>

	<parent>
		<groupId>com.hp.mqm</groupId>
		<artifactId>bamboo</artifactId>
		<version>12.53.17-SNAPSHOT</version>
	</parent>

	<!--<parent>-->
		<!--<groupId>com.hp.mqm</groupId>-->
		<!--<artifactId>indi-integrations-root</artifactId>-->
		<!--<version>12.53.17-SNAPSHOT</version>-->
	<!--</parent>-->

	<properties>
		<bamboo.version>5.9.10</bamboo.version>
		<bamboo.data.version>5.9.10</bamboo.data.version>
		<amps.version>5.0.18</amps.version>
		<plugin.testrunner.version>1.2.3</plugin.testrunner.version>
		<atlassian.spring.scanner.version>1.2.13</atlassian.spring.scanner.version>
		<!-- This key is used to keep the consistency between the key in atlassian-plugin.xml and the key to generate bundle. -->
		<atlassian.plugin.key>${project.groupId}.${project.artifactId}</atlassian.plugin.key>
		<!-- signing -->
		<cert.project.name>jarAgm</cert.project.name>
		<original.folder>${project.build.directory}/temp</original.folder>
		<matching.obj>jarfile_batch_sign_local_timestamp</matching.obj>
		<file.name>${project.artifactId}-${project.version}.jar</file.name>
	</properties>

	<dependencies>

		<!-- CONTAINER -->
		<dependency>
			<artifactId>atlassian-bamboo-web</artifactId>
			<groupId>com.atlassian.bamboo</groupId>
			<version>${bamboo.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<artifactId>atlassian-spring-scanner-annotation</artifactId>
			<groupId>com.atlassian.plugin</groupId>
			<version>${atlassian.spring.scanner.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.atlassian.bamboo</groupId>
			<artifactId>atlassian-bamboo-api</artifactId>
			<version>5.13.0.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.atlassian.bamboo.plugins</groupId>
			<artifactId>atlassian-bamboo-plugin-git</artifactId>
			<version>${bamboo.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<artifactId>atlassian-spring-scanner-runtime</artifactId>
			<groupId>com.atlassian.plugin</groupId>
			<version>${atlassian.spring.scanner.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>jsr311-api</artifactId>
			<version>1.1.1</version>
			<scope>provided</scope>
		</dependency>

		<!-- INTERNAL -->
		<dependency>
			<artifactId>integrations-sdk</artifactId>
			<groupId>com.hp.mqm</groupId>
			<version>${project.version}</version>
		</dependency>

		<!-- TESTS -->
		<dependency>
			<artifactId>junit</artifactId>
			<groupId>junit</groupId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<artifactId>mockito-core</artifactId>
			<groupId>org.mockito</groupId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<artifactId>atlassian-plugins-osgi-testrunner</artifactId>
			<groupId>com.atlassian.plugins</groupId>
			<version>${plugin.testrunner.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-bamboo-plugin</artifactId>
				<groupId>com.atlassian.maven.plugins</groupId>
				<version>${amps.version}</version>
				<extensions>true</extensions>
				<configuration>
					<allowGoogleTracking>false</allowGoogleTracking>
					<productVersion>${bamboo.version}</productVersion>
					<productDataVersion>${bamboo.data.version}</productDataVersion>
					<enableFastdev>false</enableFastdev>
					<buildTestPlugin>false</buildTestPlugin>
					<!-- See here for more options: -->
					<!-- https://developer.atlassian.com/docs/developer-tools/working-with-the-sdk/about-amps-build-options/amps-build-configuration-reference -->
				</configuration>
			</plugin>
			<plugin>
				<artifactId>atlassian-spring-scanner-maven-plugin</artifactId>
				<groupId>com.atlassian.plugin</groupId>
				<version>${atlassian.spring.scanner.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>atlassian-spring-scanner</goal>
						</goals>
						<phase>process-classes</phase>
					</execution>
				</executions>
				<configuration>
					<scannedDependencies>
						<dependency>
							<artifactId>atlassian-spring-scanner-external-jar</artifactId>
							<groupId>com.atlassian.plugin</groupId>
						</dependency>
					</scannedDependencies>
					<verbose>false</verbose>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<groupId>org.apache.maven.plugins</groupId>
				<executions>
					<execution>
						<id>unpack</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<artifactId>integrations-sdk</artifactId>
									<groupId>com.hp.mqm</groupId>
									<version>${project.version}</version>
									<type>test-jar</type>
									<outputDirectory>${project.build.directory}/test-classes</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<!--<profiles>-->
		<!--&lt;!&ndash;<profile>&ndash;&gt;-->
			<!--&lt;!&ndash;<id>jar-signing</id>&ndash;&gt;-->
			<!--&lt;!&ndash;<build>&ndash;&gt;-->
				<!--&lt;!&ndash;<defaultGoal>install</defaultGoal>&ndash;&gt;-->
				<!--&lt;!&ndash;<plugins>&ndash;&gt;-->
					<!--&lt;!&ndash;<plugin>&ndash;&gt;-->
						<!--&lt;!&ndash;<groupId>org.apache.maven.plugins</groupId>&ndash;&gt;-->
						<!--&lt;!&ndash;<artifactId>maven-antrun-plugin</artifactId>&ndash;&gt;-->
						<!--&lt;!&ndash;<version>1.7</version>&ndash;&gt;-->
						<!--&lt;!&ndash;<executions>&ndash;&gt;-->
							<!--&lt;!&ndash;<execution>&ndash;&gt;-->
								<!--&lt;!&ndash;<id>default-cli</id>&ndash;&gt;-->
								<!--&lt;!&ndash;<phase>post-integration-test</phase>&ndash;&gt;-->
								<!--&lt;!&ndash;<configuration>&ndash;&gt;-->
									<!--&lt;!&ndash;<target name="Sign">&ndash;&gt;-->
										<!--&lt;!&ndash;<echo message="This is the file name:${file.name}"/>&ndash;&gt;-->
										<!--&lt;!&ndash;<exec executable="/bin/bash" failonerror="true">&ndash;&gt;-->
											<!--&lt;!&ndash;<arg value="/opt/HPCSS/HPSignClient/HPSign.sh"/>&ndash;&gt;-->
											<!--&lt;!&ndash;&lt;!&ndash;<arg value="-r jarAgm -c HPSign.conf -i /tmp/tmp/hp-integration-bridge-upgrade-windows.jar -o /tmp/tmp/Signed -obj jarfile_batch_sign_local_timestamp" />&ndash;&gt;&ndash;&gt;-->
											<!--&lt;!&ndash;<arg value="-r ${cert.project.name} -c HPSign.conf -i ${project.build.directory}/${file.name} -o ${original.folder} -obj ${matching.obj}"/>&ndash;&gt;-->
										<!--&lt;!&ndash;</exec>&ndash;&gt;-->
									<!--&lt;!&ndash;</target>&ndash;&gt;-->
								<!--&lt;!&ndash;</configuration>&ndash;&gt;-->
								<!--&lt;!&ndash;<goals>&ndash;&gt;-->
									<!--&lt;!&ndash;<goal>run</goal>&ndash;&gt;-->
								<!--&lt;!&ndash;</goals>&ndash;&gt;-->
							<!--&lt;!&ndash;</execution>&ndash;&gt;-->
							<!--&lt;!&ndash;<execution>&ndash;&gt;-->
								<!--&lt;!&ndash;<id>copy signed jar to target</id>&ndash;&gt;-->
								<!--&lt;!&ndash;<phase>post-integration-test</phase>&ndash;&gt;-->
								<!--&lt;!&ndash;<configuration>&ndash;&gt;-->
									<!--&lt;!&ndash;<target>&ndash;&gt;-->
										<!--&lt;!&ndash;<copy file="${original.folder}/${file.name}"&ndash;&gt;-->
											  <!--&lt;!&ndash;toFile="${project.build.directory}/${file.name}" overwrite="true"/>&ndash;&gt;-->
									<!--&lt;!&ndash;</target>&ndash;&gt;-->
								<!--&lt;!&ndash;</configuration>&ndash;&gt;-->
								<!--&lt;!&ndash;<goals>&ndash;&gt;-->
									<!--&lt;!&ndash;<goal>run</goal>&ndash;&gt;-->
								<!--&lt;!&ndash;</goals>&ndash;&gt;-->
							<!--&lt;!&ndash;</execution>&ndash;&gt;-->
							<!--&lt;!&ndash;<execution>&ndash;&gt;-->
								<!--&lt;!&ndash;<id>verify-signing</id>&ndash;&gt;-->
								<!--&lt;!&ndash;<phase>post-integration-test</phase>&ndash;&gt;-->
								<!--&lt;!&ndash;<configuration>&ndash;&gt;-->
									<!--&lt;!&ndash;<target name="Verify sign">&ndash;&gt;-->
										<!--&lt;!&ndash;<echo message="This is the file name:${file.name}"/>&ndash;&gt;-->
										<!--&lt;!&ndash;<exec executable="/bin/bash" failonerror="true">&ndash;&gt;-->
											<!--&lt;!&ndash;<arg value="-c"/>&ndash;&gt;-->
											<!--&lt;!&ndash;<arg value="if /usr/bin/jarsigner -verify ${project.build.directory}/${file.name} | grep &apos;jar verified.&apos;; then echo THE JAR ${file.name} WAS SIGNED SUCCESSFULLY; exit 0; else echo THE BUILD FAILED BECAUSE JAR ${file.name} IS UNSIGNED; exit 1; fi"/>&ndash;&gt;-->
										<!--&lt;!&ndash;</exec>&ndash;&gt;-->
									<!--&lt;!&ndash;</target>&ndash;&gt;-->
								<!--&lt;!&ndash;</configuration>&ndash;&gt;-->
								<!--&lt;!&ndash;<goals>&ndash;&gt;-->
									<!--&lt;!&ndash;<goal>run</goal>&ndash;&gt;-->
								<!--&lt;!&ndash;</goals>&ndash;&gt;-->
							<!--&lt;!&ndash;</execution>&ndash;&gt;-->
						<!--&lt;!&ndash;</executions>&ndash;&gt;-->
					<!--&lt;!&ndash;</plugin>&ndash;&gt;-->
				<!--&lt;!&ndash;</plugins>&ndash;&gt;-->
			<!--&lt;!&ndash;</build>&ndash;&gt;-->
		<!--&lt;!&ndash;</profile>&ndash;&gt;-->
	<!--</profiles>-->
</project>
